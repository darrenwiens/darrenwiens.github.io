<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Darren Wiens - Experiments</title><link href="https://darrenwiens.github.io/" rel="alternate"></link><link href="https://darrenwiens.github.io/feeds/experiments.atom.xml" rel="self"></link><id>https://darrenwiens.github.io/</id><updated>2018-03-23T00:00:00-07:00</updated><subtitle></subtitle><entry><title>Query Planetlabs API from SlackHQ</title><link href="https://darrenwiens.github.io/query-planetlabs-api-from-slackhq.html" rel="alternate"></link><published>2018-03-23T00:00:00-07:00</published><updated>2018-03-23T00:00:00-07:00</updated><author><name>Darren Wiens</name></author><id>tag:darrenwiens.github.io,2018-03-23:/query-planetlabs-api-from-slackhq.html</id><summary type="html"></summary><content type="html">&lt;p&gt;Lately I’ve been looking into microservices and webhooks, and along the way made a slash command in &lt;a href="https://slack.com/"&gt;Slack&lt;/a&gt; that will query the &lt;a href="https://www.planet.com/"&gt;Planet&lt;/a&gt; image catalog and return matching image IDs. Here’s how:&lt;/p&gt;
&lt;p&gt;1.) Make yourself a microservice. I used &lt;a href="http://hook.io/"&gt;hook.io&lt;/a&gt; because it’s free, and I’m cheap. The code I used is &lt;a href="https://github.com/darrenwiens/slack-planet-catalog/blob/master/microservice.py"&gt;here&lt;/a&gt;. Basically, it receives a request from Slack (including your api key, item type, asset type, cloud cover limit, and bounding box), formats it into a Planet-friendly query, sends the request to Planet, and returns the response to Slack when it’s ready.&lt;/p&gt;
&lt;p&gt;2.) Create a new slash command in Slack. Make sure you set the request URL to your microservice above. I called my slash command ‘/planetcatalog’, but you can use whatever you want.&lt;/p&gt;
&lt;p&gt;3.) Install your slash command in Slack.&lt;/p&gt;
&lt;p&gt;4.) Run the command, like so (this isn’t a real api key – you’ll need your own):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/planetcatalog a44eb36fe3854f1db1ebXXXdff1a1a3f | PSScene4Band | analytic_sr | 0.1 | {u&amp;#39;type&amp;#39;: u&amp;#39;Polygon&amp;#39;, u&amp;#39;coordinates&amp;#39;: [[[-118.364429, 34.0597], [-118.364429, 34.061552], [-118.362153, 34.061552], [-118.362153, 34.0597], [-118.364429, 34.0597]]]}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The result should be a list of image IDs. Enjoy!&lt;/p&gt;</content><category term="Experiments"></category><category term="planet"></category><category term="slack"></category><category term="api"></category><category term="microservice"></category><category term="serverless"></category><category term="python"></category></entry></feed>